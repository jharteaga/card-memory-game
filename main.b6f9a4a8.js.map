{"version":3,"sources":["js/cards.js","js/main.js"],"names":["images","name","image","allianz","campNou","eiffel","tunco","golden","london","romania","taj","thailand","vancouver","cardSelected1","cardSelected2","cards","document","querySelectorAll","cardsNotPlaying","count","init","sort","Math","random","i","length","childNodes","imgChild","card","createElement","setAttribute","className","appendChild","addCardEvents","blockedBoard","filter","forEach","classList","add","enableBoard","remove","assignPairToCheck","element","checkPair","card1","img","index","id","card2","pairFound","incorrectPair","reset","setTimeout","flipEvent","elements","addEventListener","toggle","contains","style","visibility"],"mappings":"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","file":"main.b6f9a4a8.js","sourceRoot":"..","sourcesContent":["import allianz from '../assets/img/allianz-arena.jpg';\r\nimport campNou from '../assets/img/camp-nou.jpg';\r\nimport eiffel from '../assets/img/eiffel-tower.jpg';\r\nimport tunco from '../assets/img/el-tunco.jpg';\r\nimport golden from '../assets/img/golden-gate-bridge.jpg';\r\nimport london from '../assets/img/london.jpg';\r\nimport romania from '../assets/img/romania.jpg';\r\nimport taj from '../assets/img/taj-mahal.jpeg';\r\nimport thailand from '../assets/img/thailand.jpg';\r\nimport vancouver from '../assets/img/vancouver.jpg';\r\n\r\nexport const images = [\r\n  {\r\n    name: 'card1',\r\n    image: allianz\r\n  },\r\n  {\r\n    name: 'card2',\r\n    image: allianz\r\n  },\r\n  {\r\n    name: 'card3',\r\n    image: campNou\r\n  },\r\n  {\r\n    name: 'card4',\r\n    image: campNou\r\n  },\r\n  {\r\n    name: 'card5',\r\n    image: eiffel\r\n  },\r\n  {\r\n    name: 'card6',\r\n    image: eiffel\r\n  },\r\n  {\r\n    name: 'card7',\r\n    image: tunco\r\n  },\r\n  {\r\n    name: 'card8',\r\n    image: tunco\r\n  },\r\n  {\r\n    name: 'card9',\r\n    image: golden\r\n  },\r\n  {\r\n    name: 'card10',\r\n    image: golden\r\n  },\r\n  {\r\n    name: 'card11',\r\n    image: london\r\n  },\r\n  {\r\n    name: 'card12',\r\n    image: london\r\n  },\r\n  {\r\n    name: 'card13',\r\n    image: romania\r\n  },\r\n  {\r\n    name: 'card14',\r\n    image: romania\r\n  },\r\n  {\r\n    name: 'card15',\r\n    image: taj\r\n  },\r\n  {\r\n    name: 'card16',\r\n    image: taj\r\n  },\r\n  {\r\n    name: 'card17',\r\n    image: thailand\r\n  },\r\n  {\r\n    name: 'card18',\r\n    image: thailand\r\n  },\r\n  {\r\n    name: 'card19',\r\n    image: vancouver\r\n  },\r\n  {\r\n    name: 'card20',\r\n    image: vancouver\r\n  }\r\n];\r\n","import { images } from './cards';\r\n\r\nconst cards = document.querySelectorAll('.container__cards__card');\r\nlet cardSelected1,\r\n  cardSelected2,\r\n  cardsNotPlaying = [],\r\n  count = 0;\r\n\r\ninit();\r\n\r\n//Initiate Game\r\nfunction init() {\r\n  images.sort(() => 0.9 - Math.random());\r\n  for (let i = 0; i < cards.length; i++) {\r\n    const imgChild = cards[i].childNodes[1];\r\n\r\n    const card = document.createElement('img');\r\n    card.setAttribute('src', images[i].image);\r\n    card.className = 'container__cards__card__img';\r\n    cards[i].appendChild(card);\r\n  }\r\n\r\n  addCardEvents(cards);\r\n}\r\n\r\n//Block Board Game\r\nfunction blockedBoard() {\r\n  cardsNotPlaying = [...cards].filter(\r\n    (card) => card !== cardSelected1 && card !== cardSelected2\r\n  );\r\n\r\n  cardsNotPlaying.forEach((card) => {\r\n    card.classList.add('container__cards__card--blocked');\r\n  });\r\n}\r\n\r\n//Enable Board Game\r\nfunction enableBoard() {\r\n  cardsNotPlaying.forEach((card) => {\r\n    card.classList.remove('container__cards__card--blocked');\r\n  });\r\n}\r\n\r\n//Assign pair to check them\r\nfunction assignPairToCheck(element) {\r\n  if (count === 0) {\r\n    cardSelected1 = element;\r\n    count++;\r\n  } else if (count === 1) {\r\n    cardSelected2 = element;\r\n    blockedBoard();\r\n    checkPair();\r\n  }\r\n}\r\n\r\n//Check pairs\r\nfunction checkPair() {\r\n  const card1 = images.filter(\r\n    (img, index) => `card${index + 1}` === cardSelected1.id\r\n  );\r\n  const card2 = images.filter(\r\n    (img, index) => `card${index + 1}` === cardSelected2.id\r\n  );\r\n\r\n  if (card1[0].image === card2[0].image) {\r\n    pairFound();\r\n  } else {\r\n    incorrectPair();\r\n  }\r\n}\r\n\r\n//Pair Found\r\nfunction pairFound() {\r\n  cardSelected1.classList.remove('container__cards__card--flip-front');\r\n  cardSelected1.classList.remove('container__cards__card--flip-back');\r\n\r\n  cardSelected2.classList.remove('container__cards__card--flip-front');\r\n  cardSelected2.classList.remove('container__cards__card--flip-back');\r\n\r\n  cardSelected1.classList.add('container__cards__card--found');\r\n  cardSelected2.classList.add('container__cards__card--found');\r\n\r\n  reset();\r\n}\r\n\r\n//Incorrect pair\r\nfunction incorrectPair() {\r\n  setTimeout(() => {\r\n    flipEvent(cardSelected1);\r\n    flipEvent(cardSelected2);\r\n  }, 800);\r\n}\r\n\r\n//Add events listeners\r\nfunction addCardEvents(elements) {\r\n  elements.forEach((element) => {\r\n    element.addEventListener('click', () => {\r\n      flipEvent(element);\r\n    });\r\n  });\r\n}\r\n\r\n//Flip Event\r\nfunction flipEvent(element) {\r\n  element.classList.toggle('container__cards__card--flip-front');\r\n  element.classList.toggle('container__cards__card--flip-back');\r\n\r\n  setTimeout(() => {\r\n    if (element.classList.contains('container__cards__card--flip-back')) {\r\n      element.childNodes[1].style.visibility = 'hidden';\r\n      element.childNodes[3].style.visibility = 'visible';\r\n      assignPairToCheck(element);\r\n    } else {\r\n      element.childNodes[1].style.visibility = 'visible';\r\n      element.childNodes[3].style.visibility = 'hidden';\r\n      reset();\r\n    }\r\n  }, 360);\r\n}\r\n\r\n//Reset event\r\nfunction reset() {\r\n  count = 0;\r\n  enableBoard();\r\n  cardSelected1 = null;\r\n  cardSelected2 = null;\r\n  cardsNotPlaying = [];\r\n}\r\n"]}